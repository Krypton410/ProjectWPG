
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.beans.binding.Bindings;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Maxwell
 */
public class PullUpsChallenge extends javax.swing.JFrame {

    /**
     * Creates new form PullUpsChallenge
     */
    int passed;
  

    public PullUpsChallenge() {
        initComponents();
        myMain ti = new myMain();
        Challenge challenge = new Challenge();
        setTitle("Challenge: Pull Ups");

        setResizable(false);
        setSize(726, 400);

        Timer timer = new Timer();
        
        
        jScrollPane1.setVisible(false);
        block.setVisible(false);
        jButton1.setVisible(false);
        time.setVisible(false);
        jButton2.setVisible(false);
        table.setVisible(false);
        
        
        
        
        
        

    }

    public String postData(String name, String participants, DefaultTableModel DefaultTableModel) {
/*
        DefaultTableModel modTable1 = null;
        DefaultTableModel modTable = null;
        DefaultTableModel = modTable1;
        DefaultTableModel = modTable;
        DefaultTableModel = modTable1;
        modTable = new DefaultTableModel();

        table.setModel(modTable);
        table.setEnabled(false);
        //b?
        modTable.addColumn("Reps");

        int length = Integer.valueOf(participants);
        JOptionPane.showMessageDialog(null, "Number of Participants Recorded");

        String[] names = new String[length];
        String[] reps = new String[length];

    
        for (int counter = 0; counter < length; counter++) {
            String pNames = null;

         //   String pNames = JOptionPane.showInputDialog(null, "Enter Participants :" + (counter + 1), JOptionPane.OK_CANCEL_OPTION);
            String pReps = JOptionPane.showInputDialog(null, "Reps Made for :" + pNames + (counter + 1), JOptionPane.OK_CANCEL_OPTION);

            reps[counter] = pReps;
            //names[counter] = pNames;
          //  reps[counter] = pReps;

        }

        {
            
            
            
            
          /*  TRANSFER

            for (String str : names) {
                modTable.addRow(new Object[]{str});

            }
            */
/*
            modTable.addColumn("User");
            modTable.addColumn("time");

            for (String r : reps) {

                modTable.addRow(new Object[]{r, r});

            }
*/

            //for(int counter = 0; counter < length; counter++){
            //Players.setText(Integer.toString(counter));
    
        return name;
      
    }
          

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        time = new java.awt.Label();
        block = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("GulimChe", 0, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(240, 240, 240));
        jButton3.setText("START");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(280, 140, 110, 50);

        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(450, 150, 220, 200);

        jButton2.setText("Reset Time");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(290, 330, 90, 23);

        time.setAlignment(java.awt.Label.CENTER);
        time.setBackground(new java.awt.Color(0, 0, 0));
        time.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        time.setFont(new java.awt.Font("Lucida Console", 0, 50)); // NOI18N
        time.setForeground(new java.awt.Color(240, 240, 240));
        time.setText("0");
        getContentPane().add(time);
        time.setBounds(450, 20, 220, 130);

        block.setAlignment(java.awt.Label.CENTER);
        block.setBackground(new java.awt.Color(0, 0, 0));
        block.setFont(new java.awt.Font("Lucida Console", 0, 48)); // NOI18N
        block.setForeground(new java.awt.Color(240, 240, 240));
        block.setText("0");
        getContentPane().add(block);
        block.setBounds(450, 20, 220, 130);

        jButton1.setText("Start Timer");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(60, 330, 100, 23);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Pull Ups Challenge");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 10, 350, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-6, 0, 730, 400);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        
        
        
        Timer timer = new Timer();

        TimerTask task = new TimerTask() {

            @Override
            public void run() {

                passed++;

                time.setText(String.valueOf(passed));

            }

        };

        //1000ms = 1 s
        jButton1.setText("Stop Timer");

        if (jButton1.getText().equals("Started")) {

        }
        if (jButton1.getText().equals("Stop Timer")) {
            jButton1.setText("Done");

            //task.cancel();
            jButton1.setVisible(false);

            // task.cancel();
            time.setText("0");
            //   timer.purge();
            block.setVisible(false);
            time.setVisible(true);
            jButton1.setText("Started");
            //timer.scheduleAtFixedRate(task, 0, 1000);
        }

        /*
                  if(jButton1.getText().equals("Start Timer")){
                  
                timer.scheduleAtFixedRate(task, 0, 1000);

                }
         */
        passed = 0;
        time.setText("0");
        {
            timer.scheduleAtFixedRate(task, 0, 1000);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        passed = 0;

        jButton1.setText("Start Timer");
        jButton1.setVisible(true);
        block.setVisible(true);
        time.setVisible(false);
        time.setText("0");

        
        
        
        
        
        
        
        
        
        
        
        
        
        

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        PullUpsChallenge pull = new PullUpsChallenge();
        String participants = JOptionPane.showInputDialog(null, "Enter Number Of Participants :", JOptionPane.OK_CANCEL_OPTION);
         jButton3.setVisible(false);
        block.setVisible(true);
        jButton1.setVisible(true);
        time.setVisible(true);
        jButton2.setVisible(true);
        table.setVisible(true);
        jScrollPane1.setVisible(true);
        
        
        
        DefaultTableModel modTable1 = null;
        DefaultTableModel modTable = null;
        DefaultTableModel DefaultTableModel = modTable1;
        DefaultTableModel = modTable;
        DefaultTableModel = modTable1;
        modTable = new DefaultTableModel();
        table.setModel(modTable);
        table.setEnabled(false);
                    modTable.addColumn("User");
            modTable.addColumn("time");
        int length = Integer.valueOf(participants);
        String[] names = new String[length];
  for (int counter = 0; counter < length; counter++) {
        String pNames = JOptionPane.showInputDialog(null, "Enter Participants :" + (counter + 1), JOptionPane.OK_CANCEL_OPTION);
       names[counter] = pNames;
        
        
  }
              for (String str : names) {
                modTable.addRow(new Object[]{str});

            }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PullUpsChallenge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PullUpsChallenge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PullUpsChallenge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PullUpsChallenge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PullUpsChallenge().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label block;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    public java.awt.Label time;
    // End of variables declaration//GEN-END:variables
}
